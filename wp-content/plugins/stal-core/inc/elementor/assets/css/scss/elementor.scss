@import '../../../../../../../themes/stal/assets/css/scss/variables';
@import '../../../../../../../themes/stal/assets/css/scss/_grid-variables';
@import '../../../../../../../themes/stal/assets/css/scss/mixins';
@import '../../../../../../../plugins/stal-core/inc/header/layouts/vertical/assets/css/scss/_vertical-header-default';

@function map-deep-get($map, $keys...) {
	@each $key in $keys {
		$map: map-get($map, $key);
	}
	@return $map;
}

section.qodef-elementor-content-grid > .elementor-container {
    width: $content-grid-width-1100;
    margin: 0 auto;

    @each $key, $values in $content-grid-width-map {

        @media only screen and (min-width: map-deep-get($content-grid-width-map, $key, 'responsive-break')) {

            .qodef-content-grid-#{$key} & {
                width: map-deep-get($content-grid-width-map, $key, 'content-grid-width');
                max-width: map-deep-get($content-grid-width-map, $key, 'content-grid-width');
            }
        }
    }
}

.qodef-header--vertical {
	section.qodef-elementor-content-grid > .elementor-container {
		@each $key, $values in $vertical-content-grid-width-responsive-map {
			$index: 1;
			
			@each $responsive-key, $responsive-value in map-deep-get($vertical-content-grid-width-responsive-map, $key, 'responsive-break') {
				
				@media only screen and (min-width: $responsive-key) and (max-width: $responsive-value) {
					
					@at-root .qodef-content-grid-#{$key}#{&} {
						width: #{nth(map-deep-get($vertical-content-grid-width-responsive-map, $key, 'content-grid-width'), $index)}
					}
				}
				
				$index: $index + 1;
			}
		}
	}
}

section.qodef-elementor-content-grid > .elementor-container {
    
    @each $key, $values in $content-grid-width-responsive-map {
        
        @media only screen and (max-width: map-deep-get($content-grid-width-responsive-map, $key, 'responsive-break')) {
            width: map-deep-get($content-grid-width-responsive-map, $key, 'content-grid-width');
        }
    }
}